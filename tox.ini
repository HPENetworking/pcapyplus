[tox]
envlist = build, style, doc, test


[testenv]
basepython = python3.8
changedir = {envtmpdir}
passenv = HOME WORKSPACE https_proxy http_proxy no_proxy


[testenv:build]
skip_install = True
deps =
    wheel
whitelist_externals =
    rm
commands =
    rm -r {toxinidir}/build {toxinidir}/dist
    {envpython} {toxinidir}/setup.py bdist_wheel
    pip3 install --force-reinstall {toxinidir}/dist/pcapyplus-0.1.0-cp38-cp38-linux_x86_64.whl


[testenv:style]
skip_install = True
deps =
    flake8
    pep8-naming
whitelist_externals =
    sh
commands =
    flake8 {toxinidir}
    sh -c "\
        uncrustify -c {toxinidir}/uncrustify.cfg --check \
            {toxinidir}/lib/pcapyplus/*.cpp \
            {toxinidir}/lib/pcapyplus/include/*.h \
    "


[testenv:doc]
deps =
    -rdoc/requirements.txt
whitelist_externals =
    dot
commands =
    sphinx-build -W -b html -d doctrees {toxinidir}/doc/ html
    {envpython} -c "print('>> You may now run:\nwebdev {envtmpdir}/html/')"


[testenv:test]
deps =
    -rtest/requirements.txt
whitelist_externals =
    rm
commands =
    # Clean testing cache
    rm -rf {toxinidir}/test/__pycache__

    # Run test suite
    py.test -s \
        --junitxml=tests.xml \
        --cov=pcapyplus \
        --cov-report xml \
        --cov-report html \
        --cov-report term \
        {posargs} \
        {toxinidir}/test


[testenv:publish]
skip_install = True
deps =
    wheel
    twine
whitelist_externals =
    ls
commands =
    {envpython} {toxinidir}/setup.py sdist
    {envpython} {toxinidir}/setup.py bdist_wheel
    ls -lh {toxinidir}/dist/
    twine check {toxinidir}/dist/*
    {envpython} -c "print((\
        'Packages ready. '\
        'Execute the following command to publish:\n'\
        '    twine upload --skip-existing dist/*'\
    ))"


[flake8]
exclude = .git,.tox,.cache,__pycache__,build,*.egg-info,.local,OLD
